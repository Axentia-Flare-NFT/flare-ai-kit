# Logging level (e.g., DEBUG, INFO, WARNING)
# LOG_LEVEL=DEBUG

# API key for using Google Gemini (https://aistudio.google.com/app/apikey).
AGENT__GEMINI_API_KEY="gemini-2.0-flash"

# Gemini model to use (e.g. gemini-2.0-flash)
AGENT__GEMINI_MODEL="your_api_key"

# API key for OpenRouter.
# AGENT__OPENROUTER_API_KEY=

# Set True if interacting with testnets (Coston or Coston2).
# ECOSYSTEM__IS_TESTNET=False

# Flare RPC endpoint URL.
# ECOSYSTEM__WEB3_PROVIDER_URL=https://stylish-light-theorem.flare-mainnet.quiknode.pro/ext/bc/C/rpc

# Timeout when interacting with web3 provider (in s).
# ECOSYSTEM__WEB3_PROVIDER_TIMEOUT=5

# Flare Block Explorer URL.
# ECOSYSTEM__BLOCK_EXPLORER_URL=https://flare-explorer.flare.network/api

# Flare Block Explorer query timeout (in seconds).
# ECOSYSTEM__BLOCK_EXPLORER_TIMEOUT=10

# Max retries for Flare transactions.
# ECOSYSTEM__MAX_RETRIES=3

# Delay between retries for Flare transactions (in seconds).
# ECOSYSTEM__RETRY_DELAY=5

# Account address to use when interacting onchain.
# ECOSYSTEM__ACCOUNT_ADDRESS=

# Account private key to use when interacting onchain.
# ECOSYSTEM__ACCOUNT_PRIVATE_KEY=

# ECOSYSTEM__CONTRACTS__FLARE__SPARKDEX_UNIVERSAL_ROUTER=

# ECOSYSTEM__CONTRACTS__FLARE__SPARKDEX_SWAP_ROUTER=

# ECOSYSTEM__CONTRACTS__FLARE__KINETIC_COMPTROLLER=

# ECOSYSTEM__CONTRACTS__FLARE__KINETIC_KSFLR=

# ECOSYSTEM__CONTRACTS__COSTON2__SPARKDEX_UNIVERSAL_ROUTER=

# ECOSYSTEM__CONTRACTS__COSTON2__SPARKDEX_SWAP_ROUTER=

# ECOSYSTEM__CONTRACTS__COSTON2__KINETIC_COMPTROLLER=

# ECOSYSTEM__CONTRACTS__COSTON2__KINETIC_KSFLR=

# Host and port for the Qdrant instance.
# VECTOR_DB__QDRANT_URL=

# Dimension of vectors to use.
# VECTOR_DB__QDRANT_VECTOR_SIZE=768

# Batch size for upserting points to Qdrant.
# VECTOR_DB__QDRANT_BATCH_SIZE=100

# Embedding model name (e.g., 'gemini-embedding-exp-03-07').
# VECTOR_DB__EMBEDDINGS_MODEL=gemini-embedding-exp-03-07

# Reduced dimension for the output embedding. Leave None for max.
# VECTOR_DB__EMBEDDINGS_OUTPUT_DIMENSIONALITY=

# DSN for PostgreSQL connection string.
# VECTOR_DB__POSTGRES_DSN=

# Connection URI for the Neo4j database.
# GRAPH_DB__NEO4J_URI=neo4j://localhost:7687

# The name of the specific Neo4j database.
# GRAPH_DB__NEO4J_DATABASE=neo4j

# API key for X.
# SOCIAL__X_API_KEY=

# API key secret for X.
# SOCIAL__X_API_KEY_SECRET=

# Access token key for X.
# SOCIAL__X_ACCESS_TOKEN=

# Access token secret for X.
# SOCIAL__X_ACCESS_TOKEN_SECRET=

# API key for Telegram.
# SOCIAL__TELEGRAM_API_TOKEN=

# Use a pregenerated attestation token for testing.
# TEE__SIMULATE_ATTESTATION_TOKEN=true

# Target size for text chunks before embedding (in characters).
# INGESTION__CHUNK_SIZE=5000

# Overlap between consecutive text chunks (in characters).
# INGESTION__CHUNK_OVERLAP=500

# File extensions indexed by the indexer.
# INGESTION__GITHUB_ALLOWED_EXTENSIONS={'.cs', '.php', '.rst', '.java', '.txt', '.c', '.cpp', 'Dockerfile', '.html', '.css', '.md', '.hpp', '.sh', '.jsx', '.toml', '.scss', '.ipynb', '.rs', '.tf', '.tsx', '.go', '.js', '.kt', '.dockerfile', '.swift', '.h', '.env.example', '.yml', '.py', '.scala', '.yaml', '.ts', '.json', '.rb'}

# Directories ignored by the indexer.
# INGESTION__GITHUB_IGNORED_DIRS={'venv', '.git', '__pycache__', '.venv', 'build', 'node_modules', 'target'}

# Files ignored by the indexer.
# INGESTION__GITHUB_IGNORED_FILES={'uv.lock', 'poetry.lock', 'package-lock.json', 'Pipfile.lock', 'yarn.lock'}
